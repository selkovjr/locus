--
--  Locus datatype test
--
-- Testing operators
--
-- equality/inequality:
--
SELECT '2:100000-100000'::locus = 'chr20:100000'::locus AS bool;
 bool
------
 f
(1 row)

SELECT '20:100000-100000'::locus = 'chr20:100000'::locus AS bool;
 bool
------
 t
(1 row)

SELECT '20:100000-200000'::locus = 'chr20:100000-200000'::locus AS bool;
 bool
------
 t
(1 row)

SELECT '20:100000-199999'::locus = '20:100000-200000'::locus AS bool;
 bool
------
 f
(1 row)

SELECT '20:100000-199999'::locus != '20:100000-200000'::locus AS bool;
 bool
------
 t
(1 row)

SELECT '20:100000-100000'::locus != 'chr20'::locus AS bool;
 bool
------
 t
(1 row)

SELECT '20:100000-100000'::locus <> 'chr20'::locus AS bool;
 bool
------
 t
(1 row)

-- overlap
--
SELECT '1'::locus && '2'::locus AS bool;
 bool
------
 f
(1 row)

SELECT '1'::locus && 'chr1'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1'::locus && '1:10000000'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1:10000000-'::locus && '1:15000000'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1:-10000000'::locus && '1:10000000-'::locus AS bool; -- inclusive
 bool
------
 t
(1 row)

SELECT 'chr1:-9999999'::locus && '1:10000000-'::locus AS bool; -- inclusive
 bool
------
 f
(1 row)

SELECT 'chr1:-10000000'::locus && '1:15000000-'::locus AS bool;
 bool
------
 f
(1 row)

-- none of A is above the upper bound of B
--
SELECT 'chr1'::locus <& 'chr2'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr3'::locus <& 'chr2'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr1:1'::locus <& 'chr1:0'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr1:0'::locus <& 'chr1:1'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1:0-1'::locus <& 'chr1:1'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1:0-2'::locus <& 'chr1:1'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr1:0-2'::locus <& 'chr1:5-30'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1:0-200'::locus <& 'chr1:5-30'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr1'::locus <& 'chr1:10000'::locus AS bool; -- A spans the entire domain
 bool
------
 f
(1 row)

SELECT 'chr1:-1001'::locus <& 'chr1:1000-'::locus AS bool;  -- the upper bound of B is insurpassable
 bool
------
 t
(1 row)

-- none of A is below the lower bound of B
--
SELECT 'chr1'::locus &> 'chr2'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr3'::locus &> 'chr2'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1:1'::locus &> 'chr1:0'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1:0'::locus &> 'chr1:1'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr1:0-1'::locus &> 'chr1:1'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr1:2-10'::locus &> 'chr1:1'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1:5-30'::locus &> 'chr1:1-3'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1:10000'::locus &> 'chr1'::locus AS bool; -- the lower bound of B is the lowest possible
 bool
------
 t
(1 row)

SELECT 'chr1'::locus &> 'chr1:10000'::locus AS bool; -- Aspans the entire domain
 bool
------
 f
(1 row)

-- left
--
SELECT 'chr1'::locus << 'chr2'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1'::locus << 'chr1'::locus AS bool;
 bool
------
 f
(1 row)

SELECT '<all>'::locus << 'chr1'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr1'::locus << '<all>'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr1:1'::locus << 'chr2:0'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1:0'::locus << 'chr1:1'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1:0-1'::locus << 'chr1:1'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr1:0-1'::locus << 'chr1:2'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1:0-1'::locus << 'chr1:2-'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1:0-10'::locus << 'chr1:10-20'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr1:-1000'::locus << 'chr1:2000-'::locus AS bool;
 bool
------
 t
(1 row)

-- right
--
SELECT 'chr2'::locus >> 'chr1'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1'::locus >> 'chr1'::locus AS bool;
 bool
------
 f
(1 row)

SELECT '<all>'::locus >> 'chr1'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr1'::locus >> '<all>'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr2:0'::locus >> 'chr1:1'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1:1'::locus >> 'chr1:0'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1:1-2'::locus >> 'chr1:0-1'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr1:2-'::locus >> 'chr1:0-1'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1:10-20'::locus >> 'chr1:0-10'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr1:2000-'::locus >> 'chr1:-1000'::locus AS bool;
 bool
------
 t
(1 row)

-- "contained in" (the left value belongs within the interval specified in the right value):
SELECT 'chr1'::locus <@ '<all>'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1'::locus <@ 'chr1'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr2'::locus <@ 'chr1'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr1:1000-'::locus <@ 'chr1'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1:-999'::locus <@ 'chr1:1000-'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr1:200-500'::locus <@ 'chr1:100-900'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr7:200-500'::locus <@ 'chr1:100-900'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr1:200-500'::locus <@ '<all>:100-900'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1:100-900'::locus <@ '<all>:200-500'::locus AS bool;
 bool
------
 f
(1 row)

SELECT '<all>:200-500'::locus <@ 'chr1:100-900'::locus AS bool;
 bool
------
 f
(1 row)

-- "contains" (the left value contains the interval specified in the right value):
--
SELECT '<all>'::locus @> 'chr1'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1'::locus @> 'chr1'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr2'::locus @> 'chr1'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr1'::locus @> 'chr1:1000-'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr1:-900'::locus @> 'chr1:1000-'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr1:100-900'::locus @> 'chr1:200-500'::locus AS bool;
 bool
------
 t
(1 row)

SELECT 'chr7:100-900'::locus @> 'chr1:200-500'::locus AS bool;
 bool
------
 f
(1 row)

SELECT '<all>:100-900'::locus @> 'chr1:200-500'::locus AS bool;
 bool
------
 t
(1 row)

SELECT '<all>:200-500'::locus @> 'chr1:100-900'::locus AS bool;
 bool
------
 f
(1 row)

SELECT 'chr1:100-900'::locus @> '<all>:200-500'::locus AS bool;
 bool
------
 f
(1 row)

-- Test the tiling function
-- Test default tile size (1 million)
SELECT locus_tile_id('12:112847287-112944263'::locus);
 locus_tile_id
---------------
 12:112
(1 row)

-- Expected: '12:112' (112847287 / 1,000,000 = 112)
-- Test explicit tile size
SELECT locus_tile_id('12:112847287-112944263'::locus, 500000);
 locus_tile_id
---------------
 12:225
(1 row)

-- Expected: '12:225' (112847287 / 500000 = 225)
-- Test very small tile size
SELECT locus_tile_id('1:50-100'::locus, 10);
 locus_tile_id
---------------
 1:5
(1 row)

-- Expected: '1:5'
-- Test error on zero tile size
SELECT locus_tile_id('1:50-100'::locus, 0);
ERROR:  tile width must be positive
-- Expected: ERROR: tile width must be positive
-- Load some example data and build the index
--
CREATE TABLE test_locus (p locus);
\copy test_locus from 'data/test_locus.data'
CREATE INDEX test_locus_ix ON test_locus USING gist (p);
--
-- Test operators on the table
SELECT count(*) FROM test_locus WHERE p && '21';
 count
-------
 14161
(1 row)

SELECT count(*) FROM test_locus WHERE p && 'chr21:10600000-12608058';
 count
-------
   208
(1 row)

SELECT count(*) FROM test_locus WHERE p <& 'chr21:28800000-30000000';
 count
--------
 270982
(1 row)

SELECT count(*) FROM test_locus WHERE p << 'chr21:28800000-30000000';
 count
--------
 261810
(1 row)

SELECT count(*) FROM test_locus WHERE p >> 'chr21:28800000-30000000';
 count
-------
 62578
(1 row)

SELECT count(*) FROM test_locus WHERE p &> 'chr21:28800000-30000000';
 count
-------
 63971
(1 row)

SELECT count(*) FROM test_locus WHERE p <@ 'chr21:28800000-30000000';
 count
-------
    68
(1 row)

SELECT count(*) FROM test_locus WHERE p <@ '<all>:28800000-30000000';
 count
-------
 10520
(1 row)

-- Test sorting
SELECT * FROM test_locus WHERE range(p) && '[29475000, 29475000]' ORDER by p;
            p
-------------------------
 chr1:29474255-29475739
 chr1:29474365-29475739
 chr6:29474946-29475446
 chr16:29474666-29475277
 chr16:29474666-29475662
 chr21:29474869-29475089
 chr21:29474869-29475110
 chr21:29474869-29475283
 chr21:29474869-29475560
 chr21:29474869-29475900
(10 rows)

-- Test lower, upper, and center functions
SELECT p, lower(p), center(p), upper(p) FROM test_locus WHERE length(p) > 100 limit 6;
            p             | lower  |  center  | upper
--------------------------+--------+----------+--------
 GL000192.1:493155-493369 | 493155 |   493262 | 493369
 GL000192.1:495329-495566 | 495329 | 495447.5 | 495566
 GL000193.1:49232-49619   |  49232 |  49425.5 |  49619
 GL000193.1:73408-74417   |  73408 |  73912.5 |  74417
 GL000193.1:74189-74417   |  74189 |    74303 |  74417
 GL000193.1:75049-75289   |  75049 |    75169 |  75289
(6 rows)

